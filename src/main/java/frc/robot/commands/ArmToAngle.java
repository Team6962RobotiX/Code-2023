// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: PIDCommand.

package frc.robot.commands;

import java.util.function.DoubleSupplier;
import edu.wpi.first.math.controller.PIDController;
import edu.wpi.first.wpilibj2.command.PIDCommand;
import frc.robot.Robot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class ArmToAngle extends PIDCommand {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    public ArmToAngle(double setpoint) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PID
/*
Add the following methods to your subsystem that this command is under control of
or
Change the subsystem::getPIDCommand_Input and subsystem::setPIDCommand_Output to methods 
already created in your subsystem

        //This is the PID getter
        public double getPIDCommand_Input(){
                return 0.0; //Insert your feedback device here
        }

        //This is the PID setter
        public void setPIDCommand_Output(double currentValue){
                //motor.set(currentValue);
        }

*/
        super(new PIDController(1.0, 0.0, 0.0),  subsystem::getPIDCommand_Input, setpoint , output -> subsystem.setThisPID(output));
        getController().setTolerance(0.2);
        //Find new methods
        //getPIDController().setInputRange(0.0, 5.0);
        //Find new methods
        //getPIDController().setOutputRange(-1.0, 1.0);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PID

    }
    @Override
    public boolean isFinished() {
      // End when the controller is at the reference.
      return getController().atSetpoint();
    }
}
